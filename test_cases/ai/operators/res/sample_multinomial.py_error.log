[12:42:25] /home/tanjunhan/MXNet/src/storage/storage.cc:202: Using Pooled (Naive) StorageManager for CPU
Traceback (most recent call last):
  File "/home/tanjunhan/MXNet/sample_multinomial.py", line 12, in <module>
    sample_multinomial_res = run_performance_test(
                             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/tanjunhan/MXNet/benchmark/opperf/utils/benchmark_utils.py", line 251, in run_performance_test
    benchmark_result = _run_operator_performance_test(op, inputs, run_backward, warmup, runs, kwargs_list, profiler)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tanjunhan/MXNet/benchmark/opperf/utils/benchmark_utils.py", line 188, in _run_operator_performance_test
    _, _ = benchmark_helper_func(op, warmup, **kwargs_list[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tanjunhan/MXNet/benchmark/opperf/utils/profiler_utils.py", line 200, in cpp_profile_it
    res = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/tanjunhan/MXNet/benchmark/opperf/utils/ndarray_utils.py", line 58, in nd_forward_backward_and_profile
    res = op(**kwargs_new)
          ^^^^^^^^^^^^^^^^
  File "<string>", line 64, in sample_multinomial
  File "/home/tanjunhan/MXNet/python/mxnet/_ctypes/ndarray.py", line 76, in _imperative_invoke
    check_call(_LIB.MXImperativeInvoke(
  File "/home/tanjunhan/MXNet/python/mxnet/base.py", line 253, in check_call
    raise get_last_ffi_error()
mxnet.base.MXNetError: MXNetError: Cannot find argument 'data', Possible Arguments:
----------------
shape : Shape(tuple), optional, default=[]
    Shape to be sampled from each random distribution.
ctx : string, optional, default=''
    Context of output, in format [cpu|gpu|cpu_pinned](n). Only used for imperative calls.
dtype : {'float16', 'float32', 'float64', 'int32', 'uint8'},optional, default='int32'
    DType of the output in case this can't be inferred.
, in operator _sample_multinomial(name="", shape="(1024,)", data="
[[0.6020443  0.7172684  0.05124046 ... 0.5191853  0.62900335 0.6406839 ]
 [0.95024216 0.1060336  0.13767925 ... 0.76811254 0.07852098 0.00954542]
 [0.5256125  0.8366951  0.6978764  ... 0.4624329  0.52776664 0.97628397]
 ...
 [0.23539047 0.1820264  0.4876725  ... 0.9238308  0.97000927 0.90519834]
 [0.06271872 0.42539537 0.8960373  ... 0.9986289  0.34527466 0.7004046 ]
 [0.6548461  0.8848581  0.8977686  ... 0.80348456 0.55711114 0.20871755]]
<NDArray 1024x1024 @cpu(0)>")
